{105 = "/** Accessor for the SoundServer swarmlet. This accessor sends\n *  messages to the SoundServer via a web socket given the IP address of a server\n *  running the SoundServer swarmlet.\n *\n *  @accessor SoundActuator\n *  @author Edward A. Lee (eal@eecs.berkeley.edu)\n *  @input control A JSON object FIXME.\n *  @output data A JSON object FIXME.\n *  @output schema Upon initialization, this output port produces a JSON object that\n *   is a schema for the JSON expected on the control input.\n *  @version $$Id$$\n */\n// Stop extra messages from jslint.  Note that there should be no\n// space between the / and the * and global.\n/*globals console, error, exports, require */\n/*jshint globalstrict: true*/\n\"use strict\";\n\nexports.setup = function() {\n\tthis.implement('ControllableSensor');\n\tvar WebSocketClient = this.instantiate('WebSocketClient', 'net/WebSocketClient');\n\t// FIXME: This should be a parameter?\n\tWebSocketClient.input('server', {\n\t    'value': '10.0.0.26'\n\t});\n\tWebSocketClient.input('port', {\n\t    'value': '8080'\n\t});\n    this.connect('control', WebSocketClient, 'toSend');\n    this.connect(WebSocketClient, 'received', 'data');\n};\n\nexports.initialize = function() {\n\t// At initialize, send the schema;\n\tthis.send('schema', schema);\n\t// Also send null data.\n\tthis.send('data', null);\n};\n\nvar schema = {\n  \"type\": \"object\",\n  \"properties\": {\n    \"sound\": {\n      \t\"type\": \"string\",\n      \t\"title\": \"Name of the sound to produce\",\n      \t\"description\": \"The name of the sound to produce\"\n    }\n  }\n};\n", test = "3"}