# Configure requires $PTII
env:
  matrix:
    # Run separate jobs with these variables.  The name of the
    # variable corresponds with the target name in $PTII/build.xml and
    # should be alphabetical.
    - PT_TRAVIS_BUILD_ALL=true
    - PT_TRAVIS_DOCS=true
    - PT_TRAVIS_INSTALLERS=true
    - PT_TRAVIS_TEST_CAPECODE_XML=true
    - PT_TRAVIS_TEST_REPORT_SHORT=true
  global:
    # Environment variables shared between all builds(in alphabetical order)
    - ANT_OPTS=-Xmx1024m
    - BCVTB_HOME=${TRAVIS_BUILD_DIR}/lbnl
    - LD_LIBRARY_PATH=/usr/lib/jni:/usr/local/share/OpenCV/java/:/usr/share/OpenCV/java:${LD_LIBRARY_PATH}
    - PT_NO_NET=true
    - PATH=${PTII}/bin:${PATH}
    - PTII=${TRAVIS_BUILD_DIR}
    - PTINYOS_MOMLROOT=${TRAVIS_BUILD_DIR}/vendors/ptinyos/moml

language: node_js

# Node 8 breaks npm horribly, see http://www.accessors.org/wiki/Notes/Npm5
node_js:
  - "7"

install:
  # We keep logs in a directory to avoid the 10k line problem.
  - mkdir $HOME/logs

  # Shorter running installations first.

  # libv4l is needed by Bridj for the camera
  -  sudo apt-get install -y libv4l-dev

  # Install Java3D
  - sudo apt-get install -y libjava3d-java || true

  # Install JAI.  If the wget fails, then don't stop the build.
  - if [ ! -f $PTII/vendors/jai-1_1_2_01/lib/jai_core.jar ]; then \
       wget --quiet --no-cookies --header Cookie:\ oraclelicense=accept-securebackup-cookie http://download.oracle.com/otn-pub/java/jai/1.1.2_01-fcs/jai-1_1_2_01-lib-linux-i586.tar.gz -O /tmp/jai.tar.gz || true; \
       if [ -f /tmp/jai.tar.gz ] ; then (cd vendors; tar -zxvf /tmp/jai.tar.gz) fi;
    fi

  # Install JMF.  If the wget fails, then don't stop the build.
  - if [ ! -f $PTII/vendors/JMF-2.1.1e/lib/jmf.jar ]; then \
       wget --quiet --no-cookies --header Cookie:\ oraclelicense=accept-securebackup-cookie http://download.oracle.com/otn-pub/java/jmf/2.1.1e/jmf-2_1_1e-alljava.zip -O /tmp/jmf.zip || true; \
       if [ -f /tmp/jmf.zip ] ; then (cd vendors; unzip /tmp/jmf.zip) fi
    fi

  # Install Sphinx for the speech recognition accessor
  - if [ ! -d $PTII/vendors/misc/sphinx4 ]; then mkdir $PTII/vendors/misc/sphinx4; fi
  - if [ ! -f $PTII/vendors/misc/sphinx4/sphinx4-core-5prealpha.jar ]; then \
       wget --quiet -O $PTII/vendors/misc/sphinx4/sphinx4-core-5prealpha.jar 'https://oss.sonatype.org/service/local/artifact/maven/redirect?r=releases&g=net.sf.phat&a=sphinx4-core&v=5prealpha&e=jar' || true; \
    fi
  - if [ ! -f $PTII/vendors/misc/sphinx4/sphinx4-data-5prealpha.jar ]; then \
       wget --quiet -O $PTII/vendors/misc/sphinx4/sphinx4-data-5prealpha.jar 'https://oss.sonatype.org/service/local/artifact/maven/redirect?r=releases&g=net.sf.phat&a=sphinx4-data&v=5prealpha&e=jar' || true; \
    fi

  # Needed for building installers.
  - sudo ln -s /bin/tar /usr/local/bin/tar

  # Longer running installations

  # Use the Travis cache, see https://docs.travis-ci.com/user/cachingp
  - sudo -E $PTII/org/ptolemy/opencv/travis_build_opencv.sh

  # Display environment variables
  - env
  - ls -l vendors
  - ./configure --enable-verbose

script:
  - ant clean >& $HOME/logs/ant_clean.txt
  - if [ ! -z "$PT_TRAVIS_BUILD_ALL" ]; then ant build-all; fi
  - if [ ! -z "$PT_TRAVIS_DOCS" ]; then ant javadoc jsdoc; fi
  - if [ ! -z "$PT_TRAVIS_INSTALLERS" ]; then ant installers >& $HOME/logs/installers.txt; fi
  - if [ ! -z "$PT_TRAVIS_TEST_CAPECODE_XML" ]; then ant test.capecode.xml >& $HOME/logs/test.capecode.xml.txt; fi
  - if [ ! -z "$PT_TRAVIS_TEST_REPORT_SHORT" ]; then ant test.report.short >& $HOME/logs/test.report.short.txt; fi

# See https://docs.travis-ci.com/user/caching
cache:
  directories:
    - $PTII/vendors/jai-1_1_2_01
    - $PTII/vendors/JMF-2.1.1e
    - $PTII/vendors/misc/sphinx4
    - $PTII/vendors/opencv

# FIXME: Copy the $HOME/logs directory back to Github.
