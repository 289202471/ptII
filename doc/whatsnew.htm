<!-- DO NOT EDIT this file, it is created by running make.
     The file to edit is $PTII/doc/ptIIx.x.release.htm
     where x.x is the release number, then run 'make update'
     to update the derived files and check them in to cvs. -->
<!-- $Id$ -->
<html>
  <head>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
    <title>Ptolemy II 11.0.devel Release Notes</title>
    <link href="default.css" rel="stylesheet" type="text/css">
  </head>
  <body bgcolor="#faf0e6">
      <!--whatsnew-->
      <h2><a name="highlights">Ptolemy II 11.0.devel Highlights</a></h2>

    <p>Contents:</p>
    <ul>
      <li><a href="#highlights">Highlights</a>
	<ul>
	  <li>
	    <p>

              <!-- This text also appears in org/terraswarm/accessor/doc/main.htm -->
	      <a href="http://accessors.org#in_browser">Accessors</a>:
	      which are a technology for making the Internet of Things
	      accessible to a broader community of citizens,
	      inventors, and service providers through open
	      interfaces, an open community of developers, and an open
	      repository of technology.  Ptolemy II includes
	      the <a href="http://capecode.org#in_browser">Cape Code
	      Accessor Host</a>.
	      To invoke Cape Code, use <code>$PTII/bin/vergil -capecode</code>.
	      For more information, see
              <ul>
                Christopher Brooks, Chadlia Jerad, Hokeun Kim, Edward A. Lee, Marten Lohstroh, Victor Nouvellet, Beth Osyk, Matt Weber.
                <a href="http://www.icyphy.org/pubs/75.html" >A Component Architecture for the Internet of Things</a>,
	      <i>To Appear in Proceedings of the IEEE</i>, 2018.
                <li><a href="http://accessors.org#in_browser">http://accessors.org</a> and the following paper:
	      <br/>Elizabeth Latronico, Edward A. Lee, Marten Lohstroh, Chris Shaver, Armin Wasicek, Matt Weber.
	      <a href="http://www.terraswarm.org/pubs/332.html">A Vision of Swarmlets</a>, <i>IEEE Internet
		Computing, Special Issue on Building Internet of Things Software</i>, 19(2):20-29, March 2015.</li>
              </ul>
	      See also <a href="https://accessors.org/wiki/Main/PublicationsAndPresentations">Accessors Publications</a>.
	    </p>
	  </li>
	  <li>
	    Authorization Service Infrastructure for the Internet of Things: The challenges for security of the Internet of Things (IoT) make it difficult to directly apply existing security measures to the IoT. These challenges include heterogeneity, operation under open environment and scalability. In our work, we propose authorization service infrastructure for the IoT. This infrastructure consists of an open-source local authorization entity and software components called accessors, for accessing the authorization service provided by the local authorization entity. The local authorization entity is designed to embrace heterogeneous security requirements and scale well with resource-constrained devices. The accessors in our infrastructure enable developers to integrate security into IoT applications in an error-free way. We also perform security analysis and experiments to evaluate our proposed authorization service infrastructure.
	    <br/>Hokeun Kim, Armin Wasicek, Benjamin Mehne, Edward A. Lee.
	    <a
	       href="http://chess.eecs.berkeley.edu/pubs/1175.html#in_browser"
	       >A Secure Network Architecture for the Internet of Things
	      Based on Local Authorization Entities</a>, The 4th
	    IEEE International Conference on Future Internet of Things
	    and Cloud, August, 2016.
	  </li>
	  <li>
	    <p>Updates to the Functional Mock-up Interface (FMI)
	    including an implementation of a master algorithm (MA)
	    that deterministically combines discrete and
	    continuous-time dynamics.
	    <br/>Fabio Cremona, Marten Lohstroh, Stavros Tripakis,
	    Christopher Brooks, Edward A. Lee. <a href="http://chess.eecs.berkeley.edu/pubs/1158.html#in_browser">FIDE - An FMI Integrated Development Environment</a>, Symposium on Applied Computing, 4,
	    April, 2016.
	    </p>
	  </li>
	  <li>
	    <p>PILOT: An Actor-Oriented Learning and Optimization Toolkit for Building Swarm Applications.</p>
	    <blockquote>
	      <p>"The rapid growth of networked smart sensors today offers unprecedented volumes of continually streaming data. This renders most classical control and optimization techniques that are based on monolithic approaches ineffective for cloud-based large scale application design for the IoT. We present PILOT (Ptolemy Inference, Learning, and Optimization Toolkit), an actor-oriented machine learning and optimization toolkit that is designed for developing data-intensive distributed applications for sensor networks. PILOT presents an actor interface that enables developing complex learning and optimization tasks for large scale sensor networks in a scalable and state-space aware fashion. We demonstrate key capabilities of the toolkit with a cloud-based cooperative mobile robot target tracking scenario, and study how the framework achieves design and implementation of control policies by including higher-level abstractions of learning and optimization tasks as part of the system design."</p>
	    </blockquote>
	    <p>For more information about PILOT, see:
	      <br/>Ilge Akkaya, "<a href="https://www2.eecs.berkeley.edu/Pubs/TechRpts/2016/EECS-2016-159.html#in_browser">Data-Driven Cyber-Physical Systems via Real-Time Stream Analytics and Machine Learning</a>," EECS Department, University of California, Berkeley, Technical Report No. UCB/EECS-2016-159, October 25, 2016.
	      <br/>Ilge Akkaya, Shuhei Emoto, Edward A. Lee. <a href="http://chess.eecs.berkeley.edu/pubs/1078.html#in_browser">PILOT: An Actor-oriented Learning and Optimization Toolkit for Robotic Swarm Applications</a>, Second International Workshop on Robotic Sensor Networks (RSN'15), Cyber-Physical Systems Week 2015, 13, April, 2015.
	    </p>
	  </li>
	    
	</ul>
      </li>
      <li><a href="#demos">New demonstrations</a>
	<ul>
	  <li>TBD</li>
	</ul>
      </li>
      <li><a href="#other">Other Key New Capabilities</a></li>
      <li><a href="#libraries">New and Enhanced Actor Libraries</a></li>
      <li><a href="#features">Additional features</a></li>
      <li><a href="#worksinprogress">Works in Progress</a></li>
      <li><a href="#bugs">Bug fixes</a></li>
    </ul>

    <h2><a name="highlights" id="highlights">Highlights</a></h2>
    <p>Below are the highlights of this release.</p>

    <h3><a name="Highlight1" id="Highlight1">Highlight1</a></h3>
    <p><i>Description</i></p>
    <h4>References</h4>
    <ul>
      <li><i>Reference</i></li>
    </ul>
    <h4><a name="Highlight1Demonstrations">Highlight1 Demonstrations</a></h4>
    <ul><!-- Please keep the demos alphabetical -->
      <li><i>Link to the demo on the website</i></li>
    </ul>

    <h2><a name="demos" id="demos">New demonstrations</a></h2>
    <!-- grep "Only in" /tmp/pt78.diff | grep 11.0.devel | grep demo | awk '{if ($4 !~ /\./) {print "<a href=\"" $3 "/" $4}}' | sed 's@:/@/@'| sed 's@src/ptII11.0.devel/ptolemy@../..@' | sed 's@/\([^/]*$\)@/\1/\1/" target="_top">\1</a>@' | sort 

         OR
         $PTII/adm/bin/updateNewDemos

      -->
    <h4><a name="demo1">Demo1</a></h4>
    <ul><!-- Please keep the demos alphabetical -->
      <li><i>Link to the demo on the website</i></li>
    </ul>

    <h3>Models of Computation</h3>

    <h3>New Model of Computation or New Demos</h3>
    <ul><!-- Please keep the demos alphabetical -->
      <li><i>Link to the demo on the website</i></li>
    </ul>

    <h2>Actor Demonstrations</h2>

    <h4>New Actor Package</h4>
    <ul><!-- Please keep the demos alphabetical -->
      <li><i>Link to the demo on the website</i></li>
    </ul>

    <h4>New Demonstrations for other facilities</h4>


    <h3>New Facility</h3>
    <ul><!-- Please keep the demos alphabetical -->
      <li><i>Link to the demo on the website</i></li>
    </ul>
    <h2><a name="other" id="other">Other Key New Capabilities</a></h2>
    <ul>
      <li class="c1">
	<h3>Features</h3>
	<!--
            grep "Only in .*ptII11.0.devel" /tmp/pt.diffs | egrep -v '\.java$' | egrep -v '\.class' | egrep -v '\.jar' | egrep -v '/test/' | egrep -v ' test$' | egrep -v ' junit$' | egrep -v "/test: " | grep -v Icon.xml | grep -v README.txt | grep -v package.html
          -->
	<ul>
	  <li><i>Link to the demo on the website</i></li>
	</ul>
      </li>
    </ul>

    <h2><a name="libraries" id="libraries">New and Enhanced Actor Libraries</a></h2>
    <!--
        grep "Only in" /tmp/pt.diffs | egrep "\.java$" | grep "Only in .*ptII11.0.devel" |  sort | sed 's@Only in .*ptII11.0.devel/@@' |  sed 's@/@.@g' | sed 's@.java@@' | awk -F : '{print "<li><a href=\"codeDoc/" $1 "." $2 "\">" $2 "</a>"}' | sed 's/\. /./' | sed 's/> />/'
      -->
    <ul>
      <li><em>New Domain Polymorphic actors</em>:
	<ul>
	  <li><a href="codeDoc/ptolemy/actor/xxx">New Actor</a>
	    <blockquote>
	      <p>Authors and one line description.</p>
	      <p>More text</p>
	    </blockquote>
	  </li>
	  <li> <i>Link to codeDoc for actors</i></li>
	</ul>
      </li>
      <i>List actors by domain</i>
    </ul>

    <h2><a name="features" id="features">Additional Features</a></h2>

    <h3>Additional Feature</h3>
    <ul>
      <!-- Use in_browser because vergil has problems with the html generated by javadoc -->
      <li><i>Link to codeDoc</i></li>
    </ul>

    <h3>Other new classes</h3>
    <ul>
      <li>package
	<ul>
	  <li><i>Link to codeDoc</i></li>
	</ul>
      </li>
    </ul>

    <h2><a name="worksinprogress" id="worksinprogress">Works in Progress</a></h2>
    <ul>
      <li>package
	<ul>
	  <li><i>Link to codeDoc</i></li>
	</ul>
      </li>
    </ul>


    <h2><a name="bugs" id="bugs">Bug fixes</a></h2>
    <p>For the current list of bugs, see <a href="http://chess.eecs.berkeley.edu/ptexternal/bugs.html#in_browser" target="_top">Ptolemy II Bugs</a><br>
      and <a href="https://kepler-project.org/users/faq#section-UserFAQ-HowCanIReportBugs">Kepler Bugs</a>.</p>
    <p>A few features and classes were removed outright.</p>
    <dl>
      <dt><code><i>director</i></code></dt>
      <dd><i>Why and what to use instead.</i></dd>
    </dl>

    <h2>Backward Compatibility</h2>


    <p>Most models developed under Ptolemy II 1.0.1,
      2.0.1, 3.0.2, 4.0.1, 5.0.2  or HyVisual 2.2-beta, 3.0, 4.0.1, 5.0.1,
      6.0.2, 7.0.1, 8.0.1 and 10.0.1
      should run under Ptolemy II 11.0.devel</p>

    <p>The MoMLParser includes a list of backward
      compatibility filters that make certain changes on models
      when read, handling such issues as actors being moved or renamed
      and parameter names being changed.
      The filters themselves are defined in
      <a href="codeDoc/ptolemy/moml/filter/package-summary.html">ptolemy.moml.filter</a>.
      If you have developed your own actors under earlier versions of Ptolemy II by
      writing your own Java files, you should recompile all your java code with
      the new release.  In theory, copying the .class files should work, but
      recompiling is safer.
    </p>

</body>
</html>
